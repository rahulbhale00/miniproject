
// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

"use client";

import { useState, useEffect } from "react";
import Sidebar from "@/components/Sidebar";
import Navbar from "@/components/Navbar";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({ children }) {
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);

  // Register the service worker for PWA
  useEffect(() => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker
        .register("/sw.js")
        .then(() => console.log("Service Worker registered"))
        .catch((error) => console.error("Service Worker registration failed:", error));
    }
  }, []);

  return (
    <html lang="en">
      <head>
        {/* PWA Manifest & Icons */}
        <link rel="manifest" href="/manifest.json" />
        <meta name="theme-color" content="#000000" />
        <link rel="apple-touch-icon" sizes="192x192" href="/icons/icon-192x192.png" />
        <link rel="apple-touch-icon" sizes="512x512" href="/icons/icon-512x512.png" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <div className="flex min-h-screen relative z-10">
          {/* Sidebar - Width dynamically changes */}
          <Sidebar isOpen={isSidebarOpen} />
          {/* Main content */}
          <div className="flex-1 flex flex-col transition-all duration-300">
            {/* Navbar with toggle button */}
            <Navbar onToggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} />
            {/* Page content */}
            <div className="px-2">{children}</div>
          </div>
        </div>
      </body>
    </html>
  );
}
